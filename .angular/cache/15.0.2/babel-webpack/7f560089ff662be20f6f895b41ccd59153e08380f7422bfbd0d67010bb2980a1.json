{"ast":null,"code":"import _asyncToGenerator from \"/home/artem/PhpstormProjects/angular-pong-game/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { io } from 'socket.io-client';\nimport { firstValueFrom, Subject } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nconst WS_HOST = environment.production ? location.origin.replace(/^http/, 'ws') : 'ws://localhost:9999/';\nexport class GameService {\n  constructor() {\n    this.currentPlayer$ = new Subject();\n    this.allPlayers$ = new Subject();\n    this.playersNumbers$ = new Subject();\n    this.loserPlayerNumber$ = new Subject();\n    this.ballPosition$ = new Subject();\n  }\n\n  get currentPlayer() {\n    return this.currentPlayer$.asObservable();\n  }\n\n  handleSocketConnections() {\n    var _this = this;\n\n    this.socket = io(WS_HOST, {\n      query: {\n        name: localStorage.getItem('username'),\n        leftValue: 150,\n        platformWidth: 200\n      }\n    });\n    this.socket.on('connected', data => {\n      this.currentPlayer$.next(data.player);\n      this.allPlayers$.next(data.players);\n      this.playersNumbers$.next(data.players.map(p => p.playerNumber));\n      this.ballPosition$.next(data.ballPosition);\n      this.currentPlayer$.next(data.player);\n    });\n    this.socket.on('playerHasLeft', /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (data) {\n        const allPlayersBefore = yield firstValueFrom(_this.allPlayers$);\n\n        _this.allPlayers$.next(allPlayersBefore.filter(p => p.playerNumber !== data.playerNumber));\n\n        const allPlayersAfter = yield firstValueFrom(_this.allPlayers$);\n\n        _this.playersNumbers$.next(allPlayersAfter.map(p => p.playerNumber));\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n    this.socket.on('playerConnected', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (data) {\n        const allPlayersBefore = yield firstValueFrom(_this.allPlayers$);\n\n        _this.allPlayers$.next([...allPlayersBefore, data.player]);\n\n        const allPlayersAfter = yield firstValueFrom(_this.allPlayers$);\n\n        _this.playersNumbers$.next(allPlayersAfter.map(p => p.playerNumber));\n      });\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    this.socket.on('ballPosition', data => {\n      this.ballPosition$.next(data.ballPosition);\n    });\n    this.socket.on('countLose', /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(function* (data) {\n        const allPlayersBefore = yield firstValueFrom(_this.allPlayers$);\n        const allPlayersAfter = allPlayersBefore.map(player => {\n          _this.loserPlayerNumber$.next(data.playerNumber);\n\n          if (player.playerNumber === data.playerNumber) {\n            return { ...player,\n              loses: data.loses\n            };\n          }\n\n          return player;\n        });\n\n        _this.allPlayers$.next(allPlayersAfter);\n\n        setTimeout(() => {\n          _this.loserPlayerNumber$.next(null);\n        }, 1500);\n      });\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n    this.socket.on('disconnect', () => {\n      console.log('You was disconnected from server, loser');\n    });\n  }\n\n  movePlatform(leftValue, platformDirection) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const currentPlayer = yield firstValueFrom(_this2.currentPlayer$);\n\n      _this2.socket.emit('platformMoved', {\n        player: { ...currentPlayer,\n          leftValue,\n          platformDirection\n        }\n      });\n    })();\n  }\n\n  stopPlatform() {\n    this.socket.emit('platformStopped');\n  }\n\n  static #_ = this.ɵfac = function GameService_Factory(t) {\n    return new (t || GameService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GameService,\n    factory: GameService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}