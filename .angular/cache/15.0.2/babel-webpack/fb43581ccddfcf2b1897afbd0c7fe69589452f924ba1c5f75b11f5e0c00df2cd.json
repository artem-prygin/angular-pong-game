{"ast":null,"code":"import _asyncToGenerator from \"/home/artem/PhpstormProjects/angular-pong-game/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { GameConstants } from '../../constants/game-constants';\nimport { firstValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/game.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../pong-ball/pong-ball.component\";\nimport * as i5 from \"../lose-image/lose-image.component\";\nimport * as i6 from \"../player-platforms/player-platforms.component\";\n\nfunction GameComponent_div_2_ng_container_1_app_lose_image_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-lose-image\");\n  }\n}\n\nfunction GameComponent_div_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 4);\n    i0.ɵɵelement(2, \"app-player-platforms\", 5)(3, \"app-pong-ball\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, GameComponent_div_2_ng_container_1_app_lose_image_4_Template, 1, 0, \"app-lose-image\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const currentPlayer_r4 = ctx.ngIf;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"playersNumbers\", ctx_r3.playersNumbers)(\"currentPlayer\", currentPlayer_r4)(\"allPlayers\", ctx_r3.allPlayers);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ballPosition\", ctx_r3.ballPosition);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (currentPlayer_r4 == null ? null : currentPlayer_r4.playerNumber) === ctx_r3.loserPlayerNumber);\n  }\n}\n\nfunction GameComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtemplate(1, GameComponent_div_2_ng_container_1_Template, 5, 5, \"ng-container\", 3);\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 1, ctx_r0.gameService.currentPlayer));\n  }\n}\n\nfunction GameComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\", 7);\n    i0.ɵɵtext(1, \"Socket Connection Failed. Try again later\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class GameComponent {\n  constructor(gameService, dialog, renderer, cdr) {\n    this.gameService = gameService;\n    this.dialog = dialog;\n    this.renderer = renderer;\n    this.cdr = cdr;\n    this.playersNumbers = [];\n    this.GameConstants = GameConstants;\n  }\n\n  onKeyup(e) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const currentPlayer = yield firstValueFrom(_this.gameService.currentPlayer);\n      console.log(currentPlayer); // const { left } = window.getComputedStyle(this.currentPlayerPlatform);\n      // const leftPXValue = +left.replace('px', '');\n      // const gameFieldRects = this.gameField.nativeElement.getBoundingClientRect();\n      // const platformLeftRects = this.currentPlayerPlatform.getBoundingClientRect();\n      // const { playerNumber } = currentPlayer;\n      //\n      // switch (e.key) {\n      //     /* right and left arrows work only for players #1 and #2 */\n      //     case 'ArrowRight':\n      //         if (!GameConstants.HorizontalPlayerNumbers.includes(playerNumber) || platformLeftRects.right >= gameFieldRects.right) {\n      //             return;\n      //         }\n      //         this.renderPlatformStyleAndEmitSocket(this.currentPlayerPlatform, leftPXValue + 10, DirectionsEnum.RIGHT);\n      //         break;\n      //     case 'ArrowLeft':\n      //         if (!GameConstants.HorizontalPlayerNumbers.includes(playerNumber) || platformLeftRects.left <= gameFieldRects.left) {\n      //             return;\n      //         }\n      //         this.renderPlatformStyleAndEmitSocket(this.currentPlayerPlatform, leftPXValue - 10, DirectionsEnum.LEFT);\n      //         break;\n      //\n      //     /* up and down arrows work only for players #3 and #4 */\n      //     case 'ArrowUp':\n      //         if (GameConstants.HorizontalPlayerNumbers.includes(playerNumber) || platformLeftRects.top <= gameFieldRects.top) {\n      //             return;\n      //         }\n      //\n      //         if (currentPlayer.playerNumber === GameConstants.LeftSidePlayerNumber) {\n      //             this.renderPlatformStyleAndEmitSocket(this.currentPlayerPlatform, leftPXValue + 10, DirectionsEnum.TOP);\n      //         }\n      //\n      //         if (currentPlayer.playerNumber === GameConstants.RightSidePlayerNumber) {\n      //             this.renderPlatformStyleAndEmitSocket(this.currentPlayerPlatform, leftPXValue - 10, DirectionsEnum.TOP);\n      //         }\n      //         break;\n      //     case 'ArrowDown':\n      //         if (GameConstants.HorizontalPlayerNumbers.includes(playerNumber) || platformLeftRects.bottom >= gameFieldRects.bottom) {\n      //             return;\n      //         }\n      //\n      //         if (currentPlayer.playerNumber === GameConstants.LeftSidePlayerNumber) {\n      //             this.renderPlatformStyleAndEmitSocket(this.currentPlayerPlatform, leftPXValue - 10, DirectionsEnum.BOTTOM);\n      //         }\n      //\n      //         if (currentPlayer.playerNumber === GameConstants.RightSidePlayerNumber) {\n      //             this.renderPlatformStyleAndEmitSocket(this.currentPlayerPlatform, leftPXValue + 10, DirectionsEnum.BOTTOM);\n      //         }\n      //         break;\n      //     default:\n      //         break;\n      // }\n    })();\n  }\n\n  ngOnInit() {// to service\n  }\n\n  static #_ = this.ɵfac = function GameComponent_Factory(t) {\n    return new (t || GameComponent)(i0.ɵɵdirectiveInject(i1.GameService), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GameComponent,\n    selectors: [[\"app-game\"]],\n    hostBindings: function GameComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function GameComponent_keydown_HostBindingHandler($event) {\n          return ctx.onKeyup($event);\n        }, false, i0.ɵɵresolveWindow);\n      }\n    },\n    decls: 5,\n    vars: 5,\n    consts: [[\"class\", \"container\", 4, \"ngIf\", \"ngIfElse\"], [\"socketConnectionFailed\", \"\"], [1, \"container\"], [4, \"ngIf\"], [1, \"game-wrapper\"], [3, \"playersNumbers\", \"currentPlayer\", \"allPlayers\"], [3, \"ballPosition\"], [1, \"m-40\"]],\n    template: function GameComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtext(0);\n        i0.ɵɵpipe(1, \"async\");\n        i0.ɵɵtemplate(2, GameComponent_div_2_Template, 3, 3, \"div\", 0);\n        i0.ɵɵtemplate(3, GameComponent_ng_template_3_Template, 2, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(4);\n\n        i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(1, 3, ctx.gameService.socket$), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.gameService.socket == null ? null : ctx.gameService.socket.connected)(\"ngIfElse\", _r1);\n      }\n    },\n    dependencies: [i3.NgIf, i4.PongBallComponent, i5.LoseImageComponent, i6.PlayerPlatformsComponent, i3.AsyncPipe],\n    styles: [\".container[_ngcontent-%COMP%]{height:100%;width:100%;display:flex;align-items:center;justify-content:center}.container[_ngcontent-%COMP%]   .game-wrapper[_ngcontent-%COMP%]{height:500px;width:500px;background:antiquewhite;position:relative}.m-40[_ngcontent-%COMP%]{margin:40px}\"],\n    changeDetection: 0\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}